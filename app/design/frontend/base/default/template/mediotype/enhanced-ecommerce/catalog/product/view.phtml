<?php

$product = $this->getCurrentProduct();
$current_category = Mage::registry('current_category');
$type = $product->getTypeId();
?>
<script type="text/javascript">

    <?php $newsman_id = Mage::getStoreConfig('mediotype_ee/mediotype_ee_settings/account_id');?>

    var endpoint = "https://bogdandev2.newsmanapp.com";
    //var endpoint = "https://retargeting.newsmanapp.com";
    var _nzm = _nzm || [];
    var _nzm_config = _nzm_config || [];
    _nzm_tracking_server = endpoint;
    (function () {
        var a, methods, i;
        a = function (f) {
            return function () {
                _nzm.push([f].concat(Array.prototype.slice.call(arguments, 0)));
            }
        };
        methods = ['identify', 'track', 'run'];
        for (i = 0; i < methods.length; i++) {
            _nzm[methods[i]] = a(methods[i])
        }
        ;
        s = document.getElementsByTagName('script')[0];
        var script_dom = document.createElement('script');
        script_dom.async = true;
        script_dom.id = 'nzm-tracker';
        script_dom.setAttribute('data-site-id', '<?php echo $newsman_id ?>');
        script_dom.src = endpoint + '/js/retargeting/track.dev.js';
        s.parentNode.insertBefore(script_dom, s);
    })();

    _nzm.run('require', 'ec');

    //<![CDATA[

    <?php
$impressionData = array(
    "id" => $product->getId(),
    "name" => $product->getName(),
    "price" => $product->getPrice(),
);
if ($product->getManufacturer()) {
    $impressionData['brand'] = $product->getManufacturer();
}
if (isset($current_category)) {
    $impressionData['category'] = $current_category->getName();

}
?>
    //        'dimension1': 'Member'            // Custom dimension (string).
    // TODO - integrate once product dimensions config have been created

    var _isUpdate = false;
    var action = jQuery('#product_addtocart_form').attr('action');
                    if (action.indexOf("updateItemOptions") >= 0){
                        _isUpdate = true;
                    }

    _nzm.run('ec:addProduct', <?php echo json_encode($impressionData) ?>);
    _nzm.run('ec:setAction', 'detail');
    var nzmQty = $('qty').value;
    //this should only grab this product's add to cart button
    $$('.btn-cart').each(function (item) {
        item.originonclick = item.onclick;
        item.onclick = function (e) {

            e.preventDefault();

            var type = '<?php echo $type ?>';

            var objj = null;
            var objjR = null;

            if (type == 'grouped') {
                $$('input.qty').each(function (item) {
                    var productId = item.name.charAt(item.name.indexOf("[") + 1);
                    var name = item.up('tr').down('td').innerHTML;
                    if (item.value > 0) {
                        var productFieldObject = {
                            'id': productId,                   // Product ID (string).
                            'name': name,
                            'parent_id': <?php echo $product->getId() ?>,
                            'quantity': item.value,
                            <?php if (isset($current_category)): ?>
                            'category': '<?php echo $current_category->getName() ?>',
                            <?php endif;?>
                        };

                        var objjj = {
                            'id': productId,
                            'quantity': item.value
                        };
                    }

                    objj = productFieldObject;
                    objjR = objjj;

if(_isUpdate)
{
                    _nzm.run('ec:addProduct', objjR);
}
                });
                } else {
                    var impObj = <?php echo json_encode($impressionData) ?>;

                    impObj.quantity = $('qty').value;                  

                    objj = impObj;
                    objjR = {
                        'id': impObj.id,
                        'quantity': nzmQty
                    };

                    if(_isUpdate)
    {
                    _nzm.run('ec:addProduct', objjR);
    }
                }

                if(_isUpdate)
{
            _nzm.run('ec:setAction', 'remove');
}

            item.onclick = item.originonclick;

//remove - update
            if(_isUpdate)
{
            _nzm.run( 'send', 'event', 'UX', 'click', 'remove from cart', null, _nzm.createFunctionWithTimeout(function() {

                     _nzm.run('ec:addProduct', objj);

                     _nzm.run('ec:setAction', 'add');

                    _nzm.run('send', 'event', 'UX', 'click', 'add to cart', null, _nzm.createFunctionWithTimeout(function () {

                         productAddToCartForm.submit(this);

                    }));
            }) );
}
//add to cart
else{
    _nzm.run('ec:addProduct', objj);

_nzm.run('ec:setAction', 'add');

_nzm.run('send', 'event', 'UX', 'click', 'add to cart', null, _nzm.createFunctionWithTimeout(function () {

    productAddToCartForm.submit(this);

}));
}

        }
    });

    _nzm.run('send', 'pageview');

    //]]>
</script>
